{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venotance\\\\react\\\\new folder\\\\1\\\\carsharing\\\\src\\\\components\\\\Content\\\\OrderPage\\\\Autocomplete.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Autocomplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChange = e => {\n      const {\n        suggestions\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredSuggestions = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions,\n        showSuggestions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeSuggestion,\n        filteredSuggestions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeSuggestion: 0,\n          showSuggestions: false,\n          userInput: filteredSuggestions[activeSuggestion]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeSuggestion === 0) {\n          return;\n        }\n\n        this.setState({\n          activeSuggestion: activeSuggestion - 1\n        });\n      } // User pressed the down arrow, increment the index\n      else if (e.keyCode === 40) {\n          if (activeSuggestion - 1 === filteredSuggestions.length) {\n            return;\n          }\n\n          this.setState({\n            activeSuggestion: activeSuggestion + 1\n          });\n        }\n    };\n\n    this.state = {\n      activeSuggestion: 0,\n      filteredSuggestions: [],\n      showSuggestions: false,\n      userInput: \"\"\n    };\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeSuggestion,\n        filteredSuggestions,\n        showSuggestions,\n        userInput\n      }\n    } = this;\n    let suggestionsListComponent;\n\n    if (showSuggestions && userInput) {\n      if (filteredSuggestions.length) {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"suggestions\",\n          children: filteredSuggestions.map((suggestion, index) => {\n            let className; // Flag the active suggestion with a class\n\n            if (index === activeSuggestion) {\n              className = \"suggestion-active\";\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: onClick,\n              children: suggestion\n            }, suggestion, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 23\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this);\n      } else {\n        suggestionsListComponent = /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"no-suggestions\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"No suggestions available.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: onChange,\n        onKeyDown: onKeyDown,\n        value: userInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this), suggestionsListComponent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Autocomplete;","map":{"version":3,"sources":["C:/Users/Venotance/react/new folder/1/carsharing/src/components/Content/OrderPage/Autocomplete.jsx"],"names":["React","Component","Fragment","Autocomplete","constructor","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","length","render","suggestionsListComponent","map","index","className"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport './style.css'\r\n\r\n\r\n\r\n  class Autocomplete extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        activeSuggestion: 0,\r\n        filteredSuggestions: [],\r\n        showSuggestions: false,\r\n        userInput: \"\"\r\n      };\r\n    }\r\n\r\n    onChange = e => {\r\n        const { suggestions } = this.props;\r\n        const userInput = e.currentTarget.value;\r\n      \r\n        const filteredSuggestions = suggestions.filter(\r\n          suggestion =>\r\n            suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n      \r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          filteredSuggestions,\r\n          showSuggestions: true,\r\n          userInput: e.currentTarget.value\r\n        });\r\n      };\r\n    \r\n      onClick = e => {\r\n        this.setState({\r\n          activeSuggestion: 0,\r\n          filteredSuggestions: [],\r\n          showSuggestions: false,\r\n          userInput: e.currentTarget.innerText\r\n        });\r\n      };\r\n    \r\n      onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions } = this.state;\r\n      \r\n        if (e.keyCode === 13) {\r\n          this.setState({\r\n            activeSuggestion: 0,\r\n            showSuggestions: false,\r\n            userInput: filteredSuggestions[activeSuggestion]\r\n          });\r\n        } else if (e.keyCode === 38) {\r\n          if (activeSuggestion === 0) {\r\n            return;\r\n          }\r\n          this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n        }\r\n        // User pressed the down arrow, increment the index\r\n        else if (e.keyCode === 40) {\r\n          if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n            return;\r\n          }\r\n          this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n        }\r\n      };\r\n    \r\n      render() {\r\n        const {\r\n          onChange,\r\n          onClick,\r\n          onKeyDown,\r\n          state: {\r\n            activeSuggestion,\r\n            filteredSuggestions,\r\n            showSuggestions,\r\n            userInput\r\n          }\r\n        } = this;\r\n      \r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n              suggestionsListComponent = (\r\n                <ul class=\"suggestions\">\r\n                  {filteredSuggestions.map((suggestion, index) => {\r\n                    let className;\r\n          \r\n                    // Flag the active suggestion with a class\r\n                    if (index === activeSuggestion) {\r\n                      className = \"suggestion-active\";\r\n                    }\r\n                    return (\r\n                      <li className={className} key={suggestion} onClick={onClick}>\r\n                        {suggestion}\r\n                      </li>\r\n                    );\r\n                  })}\r\n                </ul>\r\n              );\r\n            } else {\r\n              suggestionsListComponent = (\r\n                <div class=\"no-suggestions\">\r\n                  <em>No suggestions available.</em>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n\r\n          return (\r\n            <Fragment>\r\n              <input\r\n                type=\"text\"\r\n                onChange={onChange}\r\n                onKeyDown={onKeyDown}\r\n                value={userInput}\r\n              />\r\n              {suggestionsListComponent}\r\n            </Fragment>\r\n          );\r\n        }\r\n      }\r\n      \r\n      export default Autocomplete;"]},"metadata":{},"sourceType":"module"}