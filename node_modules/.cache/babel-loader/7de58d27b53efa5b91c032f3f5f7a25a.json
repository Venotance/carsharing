{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Venotance\\\\react\\\\new folder\\\\1\\\\carsharing\\\\src\\\\components\\\\Content\\\\OrderPage\\\\Autocomplete.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class Autocomplete extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activeOption: 0,\n      filteredOptions: [],\n      showOptions: false,\n      userInput: ''\n    };\n\n    this.onChange = e => {\n      console.log('onChanges');\n      const {\n        options\n      } = this.props;\n      const userInput = e.currentTarget.value;\n      const filteredOptions = options.filter(optionName => optionName.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n      this.setState({\n        activeOption: 0,\n        filteredOptions,\n        showOptions: true,\n        userInput: e.currentTarget.value\n      });\n    };\n\n    this.onClick = e => {\n      this.setState({\n        activeOption: 0,\n        filteredOptions: [],\n        showOptions: false,\n        userInput: e.currentTarget.innerText\n      });\n    };\n\n    this.onKeyDown = e => {\n      const {\n        activeOption,\n        filteredOptions\n      } = this.state;\n\n      if (e.keyCode === 13) {\n        this.setState({\n          activeOption: 0,\n          showOptions: false,\n          userInput: filteredOptions[activeOption]\n        });\n      } else if (e.keyCode === 38) {\n        if (activeOption === 0) {\n          return;\n        }\n\n        this.setState({\n          activeOption: activeOption - 1\n        });\n      } else if (e.keyCode === 40) {\n        if (activeOption === filteredOptions.length - 1) {\n          console.log(activeOption);\n          return;\n        }\n\n        this.setState({\n          activeOption: activeOption + 1\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      onChange,\n      onClick,\n      onKeyDown,\n      state: {\n        activeOption,\n        filteredOptions,\n        showOptions,\n        userInput\n      }\n    } = this;\n    let optionList;\n\n    if (showOptions && userInput) {\n      if (filteredOptions.length) {\n        optionList = /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"options\",\n          children: filteredOptions.map((optionName, index) => {\n            let className;\n\n            if (index === activeOption) {\n              className = 'option-active';\n            }\n\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: className,\n              onClick: onClick,\n              children: optionName\n            }, optionName, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n      } else {\n        optionList = /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-options\",\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"No Option!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-box\",\n          onChange: onChange,\n          onKeyDown: onKeyDown,\n          value: userInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\",\n          className: \"search-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), optionList]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nAutocomplete.propTypes = {\n  options: PropTypes.instanceOf(Array).isRequired\n};\nexport default Autocomplete;","map":{"version":3,"sources":["C:/Users/Venotance/react/new folder/1/carsharing/src/components/Content/OrderPage/Autocomplete.jsx"],"names":["React","Component","PropTypes","Autocomplete","state","activeOption","filteredOptions","showOptions","userInput","onChange","e","console","log","options","props","currentTarget","value","filter","optionName","toLowerCase","indexOf","setState","onClick","innerText","onKeyDown","keyCode","length","render","optionList","map","index","className","propTypes","instanceOf","Array","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css'\r\n\r\nexport class Autocomplete extends Component {\r\n  static propTypes = {\r\n    options: PropTypes.instanceOf(Array).isRequired\r\n  };\r\n  state = {\r\n    activeOption: 0,\r\n    filteredOptions: [],\r\n    showOptions: false,\r\n    userInput: ''\r\n  };\r\n\r\n  onChange = (e) => {\r\n    console.log('onChanges');\r\n\r\n    const { options } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    const filteredOptions = options.filter(\r\n      (optionName) =>\r\n        optionName.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n    );\r\n\r\n    this.setState({\r\n      activeOption: 0,\r\n      filteredOptions,\r\n      showOptions: true,\r\n      userInput: e.currentTarget.value\r\n    });\r\n  };\r\n\r\n  onClick = (e) => {\r\n    this.setState({\r\n      activeOption: 0,\r\n      filteredOptions: [],\r\n      showOptions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n  };\r\n  onKeyDown = (e) => {\r\n    const { activeOption, filteredOptions } = this.state;\r\n\r\n    if (e.keyCode === 13) {\r\n      this.setState({\r\n        activeOption: 0,\r\n        showOptions: false,\r\n        userInput: filteredOptions[activeOption]\r\n      });\r\n    } else if (e.keyCode === 38) {\r\n      if (activeOption === 0) {\r\n        return;\r\n      }\r\n      this.setState({ activeOption: activeOption - 1 });\r\n    } else if (e.keyCode === 40) {\r\n      if (activeOption === filteredOptions.length - 1) {\r\n        console.log(activeOption);\r\n        return;\r\n      }\r\n      this.setState({ activeOption: activeOption + 1 });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n\r\n      state: { activeOption, filteredOptions, showOptions, userInput }\r\n    } = this;\r\n    let optionList;\r\n    if (showOptions && userInput) {\r\n      if (filteredOptions.length) {\r\n        optionList = (\r\n          <ul className=\"options\">\r\n            {filteredOptions.map((optionName, index) => {\r\n              let className;\r\n              if (index === activeOption) {\r\n                className = 'option-active';\r\n              }\r\n              return (\r\n                <li className={className} key={optionName} onClick={onClick}>\r\n                  {optionName}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      } else {\r\n        optionList = (\r\n          <div className=\"no-options\">\r\n            <em>No Option!</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"search-box\"\r\n            onChange={onChange}\r\n            onKeyDown={onKeyDown}\r\n            value={userInput}\r\n          />\r\n          <input type=\"submit\" value=\"\" className=\"search-btn\" />\r\n        </div>\r\n        {optionList}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n"]},"metadata":{},"sourceType":"module"}