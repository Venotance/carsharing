{"ast":null,"code":"'use strict';\n\nconst SELECTOR_ITEM = '.slider__item';\nconst SELECTOR_ITEMS = '.slider__items';\nconst SELECTOR_WRAPPER = '.slider__wrapper';\nconst SELECTOR_PREV = '.slider__control[data-slide=\"prev\"]';\nconst SELECTOR_NEXT = '.slider__control[data-slide=\"next\"]';\nconst SELECTOR_INDICATOR = '.slider__indicators>li';\nconst SLIDER_TRANSITION_OFF = 'slider_disable-transition';\nconst CLASS_CONTROL = 'slider__control';\nconst CLASS_CONTROL_HIDE = 'slider__control_hide';\nconst CLASS_ITEM_ACTIVE = 'slider__item_active';\nconst CLASS_INDICATOR_ACTIVE = 'active';\n\nfunction hasTouchDevice() {\n  return !!('ontouchstart' in window || navigator.maxTouchPoints);\n}\n\nfunction hasElementInVew($elem) {\n  const rect = $elem.getBoundingClientRect();\n  const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n  const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n  const vertInView = rect.top <= windowHeight && rect.top + rect.height >= 0;\n  const horInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\n  return vertInView && horInView;\n}\n\nfunction ChiefSlider($elem, config) {\n  // configuration of the slider\n  this._config = {\n    loop: true,\n    autoplay: true,\n    interval: 1000,\n    pauseOnHover: true,\n    refresh: true,\n    swipe: true\n  }; // slider properties\n\n  this._widthItem = 0;\n  this._widthWrapper = 0;\n  this._itemsInVisibleArea = 0;\n  this._transform = 0; // текущее значение трансформации\n\n  this._transformStep = 0; // значение шага трансформации\n\n  this._intervalId = null; // elements of slider\n\n  this._$root = null; // root element of slider (default \".slider__item\")\n\n  this._$wrapper = null; // element with class \".slider__wrapper\"\n\n  this._$items = null; // element with class \".slider__items\"\n\n  this._$itemList = null; // elements with class \".slider__item\"\n\n  this._$controlPrev = null; // element with class .slider__control[data-slide=\"prev\"]\n\n  this._$controlNext = null; // element with class .slider__control[data-slide=\"next\"]\n\n  this._$indicatorList = null; // индикаторы\n  // min and min order\n\n  this._minOrder = 0;\n  this._maxOrder = 0; // items with min and max order\n\n  this._$itemByMinOrder = null;\n  this._$itemByMaxOrder = null; // min and max value of translate\n\n  this._minTranslate = 0;\n  this._maxTranslate = 0; // default slider direction\n\n  this._direction = 'next'; // determines whether the position of item needs to be determined\n\n  this._updateItemPositionFlag = false;\n  this._activeItems = [];\n  this._isTouchDevice = hasTouchDevice(); // constructor\n\n  this._init($elem, config);\n\n  this._addEventListener();\n} // initial setup of slider\n\n\n_c = ChiefSlider;\n\nChiefSlider.prototype._init = function ($root, config) {\n  // elements of slider\n  this._$root = $root;\n  this._$itemList = $root.querySelectorAll(SELECTOR_ITEM);\n  this._$items = $root.querySelector(SELECTOR_ITEMS);\n  this._$wrapper = $root.querySelector(SELECTOR_WRAPPER);\n  this._$controlPrev = $root.querySelector(SELECTOR_PREV);\n  this._$controlNext = $root.querySelector(SELECTOR_NEXT);\n  this._$indicatorList = $root.querySelectorAll(SELECTOR_INDICATOR); // create some constants\n\n  const $itemList = this._$itemList;\n  const widthItem = $itemList[0].offsetWidth;\n  const widthWrapper = this._$wrapper.offsetWidth;\n  const itemsInVisibleArea = Math.round(widthWrapper / widthItem); // initial setting properties\n\n  this._widthItem = widthItem;\n  this._widthWrapper = widthWrapper;\n  this._itemsInVisibleArea = itemsInVisibleArea;\n  this._transformStep = 100 / itemsInVisibleArea;\n\n  for (let key in config) {\n    if (this._config.hasOwnProperty(key)) {\n      this._config[key] = config[key];\n    }\n  } // initial setting order and translate items\n\n\n  for (let i = 0, length = $itemList.length; i < length; i++) {\n    $itemList[i].dataset.index = i;\n    $itemList[i].dataset.order = i;\n    $itemList[i].dataset.translate = 0;\n\n    if (i < itemsInVisibleArea) {\n      this._activeItems.push(i);\n    }\n  }\n\n  this._updateClassForActiveItems(); // hide prev arrow for non-infinite slider\n\n\n  if (!this._config.loop) {\n    if (this._$controlPrev) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n\n    return;\n  } // translate last item before first\n\n\n  const count = $itemList.length - 1;\n  const translate = -$itemList.length * 100;\n  $itemList[count].dataset.order = -1;\n  $itemList[count].dataset.translate = -$itemList.length * 100;\n  $itemList[count].style.transform = 'translateX('.concat(translate, '%)'); // update values of extreme properties\n\n  this._updateExtremeProperties();\n\n  this._updateIndicators(); // calling _autoplay\n\n\n  this._autoplay();\n}; // подключения обработчиков событий для слайдера\n\n\nChiefSlider.prototype._addEventListener = function () {\n  const $root = this._$root; // on click\n\n  $root.addEventListener('click', this._eventHandler.bind(this)); // on hover\n\n  if (this._config.autoplay && this._config.pauseOnHover) {\n    $root.addEventListener('mouseenter', function () {\n      this._autoplay('stop');\n    }.bind(this));\n    $root.addEventListener('mouseleave', function () {\n      this._autoplay();\n    }.bind(this));\n  } // on resize\n\n\n  if (this._config.refresh) {\n    window.addEventListener('resize', function () {\n      window.requestAnimationFrame(this._refresh.bind(this));\n    }.bind(this));\n  } // on transitionstart and transitionend\n\n\n  if (this._config.loop) {\n    this._$items.addEventListener('transitionstart', function () {\n      // transitionstart\n      this._updateItemPositionFlag = true;\n      window.requestAnimationFrame(this._updateItemPosition.bind(this));\n    }.bind(this));\n\n    this._$items.addEventListener('transitionend', function () {\n      // transitionend\n      this._updateItemPositionFlag = false;\n    }.bind(this));\n  } // on touchstart and touchend\n\n\n  if (this._isTouchDevice && this._config.swipe) {\n    $root.addEventListener('touchstart', function (e) {\n      this._touchStartCoord = e.changedTouches[0].clientX;\n    }.bind(this));\n    $root.addEventListener('touchend', function (e) {\n      const touchEndCoord = e.changedTouches[0].clientX;\n      const delta = touchEndCoord - this._touchStartCoord;\n\n      if (delta > 50) {\n        this._moveToPrev();\n      } else if (delta < -50) {\n        this._moveToNext();\n      }\n    }.bind(this));\n  } // on mousedown and mouseup\n\n\n  if (!this._isTouchDevice && this._config.swipe) {\n    $root.addEventListener('mousedown', function (e) {\n      this._touchStartCoord = e.clientX;\n    }.bind(this));\n    $root.addEventListener('mouseup', function (e) {\n      const touchEndCoord = e.clientX;\n      const delta = touchEndCoord - this._touchStartCoord;\n\n      if (delta > 50) {\n        this._moveToPrev();\n      } else if (delta < -50) {\n        this._moveToNext();\n      }\n    }.bind(this));\n  }\n}; // update values of extreme properties\n\n\nChiefSlider.prototype._updateExtremeProperties = function () {\n  const $itemList = this._$itemList;\n  this._minOrder = +$itemList[0].dataset.order;\n  this._maxOrder = this._minOrder;\n  this._$itemByMinOrder = $itemList[0];\n  this._$itemByMaxOrder = $itemList[0];\n  this._minTranslate = +$itemList[0].dataset.translate;\n  this._maxTranslate = this._minTranslate;\n\n  for (let i = 0, length = $itemList.length; i < length; i++) {\n    const $item = $itemList[i];\n    const order = +$item.dataset.order;\n\n    if (order < this._minOrder) {\n      this._minOrder = order;\n      this._$itemByMinOrder = $item;\n      this._minTranslate = +$item.dataset.translate;\n    } else if (order > this._maxOrder) {\n      this._maxOrder = order;\n      this._$itemByMaxOrder = $item;\n      this._minTranslate = +$item.dataset.translate;\n    }\n  }\n}; // update position of item\n\n\nChiefSlider.prototype._updateItemPosition = function () {\n  if (!this._updateItemPositionFlag) {\n    return;\n  }\n\n  const $wrapper = this._$wrapper;\n  const $wrapperClientRect = $wrapper.getBoundingClientRect();\n  const widthHalfItem = $wrapperClientRect.width / this._itemsInVisibleArea / 2;\n  const count = this._$itemList.length;\n\n  if (this._direction === 'next') {\n    const wrapperLeft = $wrapperClientRect.left;\n    const $min = this._$itemByMinOrder;\n    let translate = this._minTranslate;\n    const clientRect = $min.getBoundingClientRect();\n\n    if (clientRect.right < wrapperLeft - widthHalfItem) {\n      $min.dataset.order = this._minOrder + count;\n      translate += count * 100;\n      $min.dataset.translate = translate;\n      $min.style.transform = 'translateX('.concat(translate, '%)'); // update values of extreme properties\n\n      this._updateExtremeProperties();\n    }\n  } else {\n    const wrapperRight = $wrapperClientRect.right;\n    const $max = this._$itemByMaxOrder;\n    let translate = this._maxTranslate;\n    const clientRect = $max.getBoundingClientRect();\n\n    if (clientRect.left > wrapperRight + widthHalfItem) {\n      $max.dataset.order = this._maxOrder - count;\n      translate -= count * 100;\n      $max.dataset.translate = translate;\n      $max.style.transform = 'translateX('.concat(translate, '%)'); // update values of extreme properties\n\n      this._updateExtremeProperties();\n    }\n  } // updating...\n\n\n  requestAnimationFrame(this._updateItemPosition.bind(this));\n}; // _updateClassForActiveItems\n\n\nChiefSlider.prototype._updateClassForActiveItems = function () {\n  const activeItems = this._activeItems;\n  const $itemList = this._$itemList;\n\n  for (let i = 0, length = $itemList.length; i < length; i++) {\n    const $item = $itemList[i];\n    const index = +$item.dataset.index;\n\n    if (activeItems.indexOf(index) > -1) {\n      $item.classList.add(CLASS_ITEM_ACTIVE);\n    } else {\n      $item.classList.remove(CLASS_ITEM_ACTIVE);\n    }\n  }\n}; // _updateIndicators\n\n\nChiefSlider.prototype._updateIndicators = function () {\n  const $indicatorList = this._$indicatorList;\n  const $itemList = this._$itemList;\n\n  if (!$indicatorList.length) {\n    return;\n  }\n\n  for (let index = 0, length = $itemList.length; index < length; index++) {\n    const $item = $itemList[index];\n\n    if ($item.classList.contains(CLASS_ITEM_ACTIVE)) {\n      $indicatorList[index].classList.add(CLASS_INDICATOR_ACTIVE);\n    } else {\n      $indicatorList[index].classList.remove(CLASS_INDICATOR_ACTIVE);\n    }\n  }\n}; // move slides\n\n\nChiefSlider.prototype._move = function () {\n  if (!hasElementInVew(this._$root)) {\n    return;\n  }\n\n  const step = this._direction === 'next' ? -this._transformStep : this._transformStep;\n  const transform = this._transform + step;\n\n  if (!this._config.loop) {\n    const endTransformValue = this._transformStep * (this._$itemList.length - this._itemsInVisibleArea);\n\n    if (transform < -endTransformValue || transform > 0) {\n      return;\n    }\n\n    this._$controlPrev.classList.remove(CLASS_CONTROL_HIDE);\n\n    this._$controlNext.classList.remove(CLASS_CONTROL_HIDE);\n\n    if (transform === -endTransformValue) {\n      this._$controlNext.classList.add(CLASS_CONTROL_HIDE);\n    } else if (transform === 0) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n  }\n\n  const activeIndex = [];\n\n  if (this._direction === 'next') {\n    for (let i = 0, length = this._activeItems.length; i < length; i++) {\n      let index = this._activeItems[i];\n      let newIndex = ++index;\n\n      if (newIndex > this._$itemList.length - 1) {\n        newIndex -= this._$itemList.length;\n      }\n\n      activeIndex.push(newIndex);\n    }\n  } else {\n    for (let i = 0, length = this._activeItems.length; i < length; i++) {\n      let index = this._activeItems[i];\n      let newIndex = --index;\n\n      if (newIndex < 0) {\n        newIndex += this._$itemList.length;\n      }\n\n      activeIndex.push(newIndex);\n    }\n  }\n\n  this._activeItems = activeIndex;\n\n  this._updateClassForActiveItems();\n\n  this._updateIndicators();\n\n  this._transform = transform;\n  this._$items.style.transform = 'translateX('.concat(transform, '%)');\n}; // _moveToNext\n\n\nChiefSlider.prototype._moveToNext = function () {\n  this._direction = 'next';\n\n  this._move();\n}; // _moveToPrev\n\n\nChiefSlider.prototype._moveToPrev = function () {\n  this._direction = 'prev';\n\n  this._move();\n}; // _moveTo\n\n\nChiefSlider.prototype._moveTo = function (index) {\n  const $indicatorList = this._$indicatorList;\n  let nearestIndex = null;\n  let diff = null;\n\n  for (let i = 0, length = $indicatorList.length; i < length; i++) {\n    const $indicator = $indicatorList[i];\n\n    if ($indicator.classList.contains(CLASS_INDICATOR_ACTIVE)) {\n      const slideTo = +$indicator.dataset.slideTo;\n\n      if (diff === null) {\n        nearestIndex = slideTo;\n        diff = Math.abs(index - nearestIndex);\n      } else {\n        if (Math.abs(index - slideTo) < diff) {\n          nearestIndex = slideTo;\n          diff = Math.abs(index - nearestIndex);\n        }\n      }\n    }\n  }\n\n  diff = index - nearestIndex;\n\n  if (diff === 0) {\n    return;\n  }\n\n  this._direction = diff > 0 ? 'next' : 'prev';\n\n  for (let i = 1; i <= Math.abs(diff); i++) {\n    this._move();\n  }\n}; // обработчик click для слайдера\n\n\nChiefSlider.prototype._eventHandler = function (e) {\n  const $target = e.target;\n\n  this._autoplay('stop');\n\n  if ($target.classList.contains(CLASS_CONTROL)) {\n    // при клике на кнопки влево и вправо\n    e.preventDefault();\n    this._direction = $target.dataset.slide;\n\n    this._move();\n  } else if ($target.dataset.slideTo) {\n    // при клике на индикаторы\n    const index = +$target.dataset.slideTo;\n\n    this._moveTo(index);\n  }\n\n  this._autoplay();\n}; // _autoplay\n\n\nChiefSlider.prototype._autoplay = function (action) {\n  if (!this._config.autoplay) {\n    return;\n  }\n\n  if (action === 'stop') {\n    clearInterval(this._intervalId);\n    this._intervalId = null;\n    return;\n  }\n\n  if (this._intervalId === null) {\n    this._intervalId = setInterval(function () {\n      this._direction = 'next';\n\n      this._move();\n    }.bind(this), this._config.interval);\n  }\n}; // _refresh\n\n\nChiefSlider.prototype._refresh = function () {\n  // create some constants\n  const $itemList = this._$itemList;\n  const widthItem = $itemList[0].offsetWidth;\n  const widthWrapper = this._$wrapper.offsetWidth;\n  const itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n\n  if (itemsInVisibleArea === this._itemsInVisibleArea) {\n    return;\n  }\n\n  this._autoplay('stop');\n\n  this._$items.classList.add(SLIDER_TRANSITION_OFF);\n\n  this._$items.style.transform = 'translateX(0)'; // setting properties after reset\n\n  this._widthItem = widthItem;\n  this._widthWrapper = widthWrapper;\n  this._itemsInVisibleArea = itemsInVisibleArea;\n  this._transform = 0;\n  this._transformStep = 100 / itemsInVisibleArea;\n  this._updateItemPositionFlag = false;\n  this._activeItems = []; // setting order and translate items after reset\n\n  for (let i = 0, length = $itemList.length; i < length; i++) {\n    const $item = $itemList[i];\n    const position = i;\n    $item.dataset.index = position;\n    $item.dataset.order = position;\n    $item.dataset.translate = 0;\n    $item.style.transform = 'translateX(0)';\n\n    if (position < itemsInVisibleArea) {\n      this._activeItems.push(position);\n    }\n  }\n\n  this._updateClassForActiveItems();\n\n  window.requestAnimationFrame(function () {\n    this._$items.classList.remove(SLIDER_TRANSITION_OFF);\n  }.bind(this)); // hide prev arrow for non-infinite slider\n\n  if (!this._config.loop) {\n    if (this._$controlPrev) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n\n    return;\n  } // translate last item before first\n\n\n  const count = $itemList.length - 1;\n  const translate = -$itemList.length * 100;\n  $itemList[count].dataset.order = -1;\n  $itemList[count].dataset.translate = -$itemList.length * 100;\n  $itemList[count].style.transform = 'translateX('.concat(translate, '%)'); // update values of extreme properties\n\n  this._updateExtremeProperties();\n\n  this._updateIndicators(); // calling _autoplay\n\n\n  this._autoplay();\n}; // public\n\n\nChiefSlider.prototype.next = function () {\n  this._moveToNext();\n};\n\nChiefSlider.prototype.prev = function () {\n  this._moveToPrev();\n};\n\nChiefSlider.prototype.moveTo = function (index) {\n  this._moveTo(index);\n};\n\nChiefSlider.prototype.refresh = function () {\n  this._refresh();\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ChiefSlider\");","map":{"version":3,"sources":["D:/Program Files (x86)/React/public/git/carsharing/src/components/Content/Slider/chiefslider.js"],"names":["SELECTOR_ITEM","SELECTOR_ITEMS","SELECTOR_WRAPPER","SELECTOR_PREV","SELECTOR_NEXT","SELECTOR_INDICATOR","SLIDER_TRANSITION_OFF","CLASS_CONTROL","CLASS_CONTROL_HIDE","CLASS_ITEM_ACTIVE","CLASS_INDICATOR_ACTIVE","hasTouchDevice","window","navigator","maxTouchPoints","hasElementInVew","$elem","rect","getBoundingClientRect","windowHeight","innerHeight","document","documentElement","clientHeight","windowWidth","innerWidth","clientWidth","vertInView","top","height","horInView","left","width","ChiefSlider","config","_config","loop","autoplay","interval","pauseOnHover","refresh","swipe","_widthItem","_widthWrapper","_itemsInVisibleArea","_transform","_transformStep","_intervalId","_$root","_$wrapper","_$items","_$itemList","_$controlPrev","_$controlNext","_$indicatorList","_minOrder","_maxOrder","_$itemByMinOrder","_$itemByMaxOrder","_minTranslate","_maxTranslate","_direction","_updateItemPositionFlag","_activeItems","_isTouchDevice","_init","_addEventListener","prototype","$root","querySelectorAll","querySelector","$itemList","widthItem","offsetWidth","widthWrapper","itemsInVisibleArea","Math","round","key","hasOwnProperty","i","length","dataset","index","order","translate","push","_updateClassForActiveItems","classList","add","count","style","transform","concat","_updateExtremeProperties","_updateIndicators","_autoplay","addEventListener","_eventHandler","bind","requestAnimationFrame","_refresh","_updateItemPosition","e","_touchStartCoord","changedTouches","clientX","touchEndCoord","delta","_moveToPrev","_moveToNext","$item","$wrapper","$wrapperClientRect","widthHalfItem","wrapperLeft","$min","clientRect","right","wrapperRight","$max","activeItems","indexOf","remove","$indicatorList","contains","_move","step","endTransformValue","activeIndex","newIndex","_moveTo","nearestIndex","diff","$indicator","slideTo","abs","$target","target","preventDefault","slide","action","clearInterval","setInterval","position","next","prev","moveTo"],"mappings":"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","sourcesContent":["'use strict';\n\nconst SELECTOR_ITEM = '.slider__item';\nconst SELECTOR_ITEMS = '.slider__items';\nconst SELECTOR_WRAPPER = '.slider__wrapper';\nconst SELECTOR_PREV = '.slider__control[data-slide=\"prev\"]';\nconst SELECTOR_NEXT = '.slider__control[data-slide=\"next\"]';\nconst SELECTOR_INDICATOR = '.slider__indicators>li';\n\nconst SLIDER_TRANSITION_OFF = 'slider_disable-transition';\nconst CLASS_CONTROL = 'slider__control';\nconst CLASS_CONTROL_HIDE = 'slider__control_hide';\nconst CLASS_ITEM_ACTIVE = 'slider__item_active';\nconst CLASS_INDICATOR_ACTIVE = 'active';\n\nfunction hasTouchDevice() {\n  return !!('ontouchstart' in window || navigator.maxTouchPoints);\n}\n\nfunction hasElementInVew($elem) {\n  const rect = $elem.getBoundingClientRect();\n  const windowHeight = window.innerHeight || document.documentElement.clientHeight;\n  const windowWidth = window.innerWidth || document.documentElement.clientWidth;\n  const vertInView = rect.top <= windowHeight && rect.top + rect.height >= 0;\n  const horInView = rect.left <= windowWidth && rect.left + rect.width >= 0;\n  return vertInView && horInView;\n}\n\nfunction ChiefSlider($elem, config) {\n  // configuration of the slider\n  this._config = {\n    loop: true,\n    autoplay: true,\n    interval: 1000,\n    pauseOnHover: true,\n    refresh: true,\n    swipe: true,\n  };\n  // slider properties\n  this._widthItem = 0;\n  this._widthWrapper = 0;\n  this._itemsInVisibleArea = 0;\n  this._transform = 0; // текущее значение трансформации\n  this._transformStep = 0; // значение шага трансформации\n  this._intervalId = null;\n  // elements of slider\n  this._$root = null; // root element of slider (default \".slider__item\")\n  this._$wrapper = null; // element with class \".slider__wrapper\"\n  this._$items = null; // element with class \".slider__items\"\n  this._$itemList = null; // elements with class \".slider__item\"\n  this._$controlPrev = null; // element with class .slider__control[data-slide=\"prev\"]\n  this._$controlNext = null; // element with class .slider__control[data-slide=\"next\"]\n  this._$indicatorList = null; // индикаторы\n  // min and min order\n  this._minOrder = 0;\n  this._maxOrder = 0;\n  // items with min and max order\n  this._$itemByMinOrder = null;\n  this._$itemByMaxOrder = null;\n  // min and max value of translate\n  this._minTranslate = 0;\n  this._maxTranslate = 0;\n  // default slider direction\n  this._direction = 'next';\n  // determines whether the position of item needs to be determined\n  this._updateItemPositionFlag = false;\n  this._activeItems = [];\n  this._isTouchDevice = hasTouchDevice();\n\n  // constructor\n  this._init($elem, config);\n  this._addEventListener();\n}\n\n// initial setup of slider\nChiefSlider.prototype._init = function ($root, config) {\n  // elements of slider\n  this._$root = $root;\n  this._$itemList = $root.querySelectorAll(SELECTOR_ITEM);\n  this._$items = $root.querySelector(SELECTOR_ITEMS);\n  this._$wrapper = $root.querySelector(SELECTOR_WRAPPER);\n  this._$controlPrev = $root.querySelector(SELECTOR_PREV);\n  this._$controlNext = $root.querySelector(SELECTOR_NEXT);\n  this._$indicatorList = $root.querySelectorAll(SELECTOR_INDICATOR);\n  // create some constants\n  const $itemList = this._$itemList;\n  const widthItem = $itemList[0].offsetWidth;\n  const widthWrapper = this._$wrapper.offsetWidth;\n  const itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n  // initial setting properties\n  this._widthItem = widthItem;\n  this._widthWrapper = widthWrapper;\n  this._itemsInVisibleArea = itemsInVisibleArea;\n  this._transformStep = 100 / itemsInVisibleArea;\n  for (let key in config) {\n    if (this._config.hasOwnProperty(key)) {\n      this._config[key] = config[key];\n    }\n  }\n  // initial setting order and translate items\n  for (let i = 0, length = $itemList.length; i < length; i++) {\n    $itemList[i].dataset.index = i;\n    $itemList[i].dataset.order = i;\n    $itemList[i].dataset.translate = 0;\n    if (i < itemsInVisibleArea) {\n      this._activeItems.push(i);\n    }\n  }\n  this._updateClassForActiveItems();\n  // hide prev arrow for non-infinite slider\n  if (!this._config.loop) {\n    if (this._$controlPrev) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n    return;\n  }\n  // translate last item before first\n  const count = $itemList.length - 1;\n  const translate = -$itemList.length * 100;\n  $itemList[count].dataset.order = -1;\n  $itemList[count].dataset.translate = -$itemList.length * 100;\n  $itemList[count].style.transform = 'translateX('.concat(translate, '%)');\n  // update values of extreme properties\n  this._updateExtremeProperties();\n  this._updateIndicators();\n  // calling _autoplay\n  this._autoplay();\n};\n\n// подключения обработчиков событий для слайдера\nChiefSlider.prototype._addEventListener = function () {\n  const $root = this._$root;\n\n  // on click\n  $root.addEventListener('click', this._eventHandler.bind(this));\n\n  // on hover\n  if (this._config.autoplay && this._config.pauseOnHover) {\n    $root.addEventListener(\n      'mouseenter',\n      function () {\n        this._autoplay('stop');\n      }.bind(this)\n    );\n    $root.addEventListener(\n      'mouseleave',\n      function () {\n        this._autoplay();\n      }.bind(this)\n    );\n  }\n\n  // on resize\n  if (this._config.refresh) {\n    window.addEventListener(\n      'resize',\n      function () {\n        window.requestAnimationFrame(this._refresh.bind(this));\n      }.bind(this)\n    );\n  }\n\n  // on transitionstart and transitionend\n  if (this._config.loop) {\n    this._$items.addEventListener(\n      'transitionstart',\n      function () {\n        // transitionstart\n        this._updateItemPositionFlag = true;\n        window.requestAnimationFrame(this._updateItemPosition.bind(this));\n      }.bind(this)\n    );\n    this._$items.addEventListener(\n      'transitionend',\n      function () {\n        // transitionend\n        this._updateItemPositionFlag = false;\n      }.bind(this)\n    );\n  }\n\n  // on touchstart and touchend\n  if (this._isTouchDevice && this._config.swipe) {\n    $root.addEventListener(\n      'touchstart',\n      function (e) {\n        this._touchStartCoord = e.changedTouches[0].clientX;\n      }.bind(this)\n    );\n    $root.addEventListener(\n      'touchend',\n      function (e) {\n        const touchEndCoord = e.changedTouches[0].clientX;\n        const delta = touchEndCoord - this._touchStartCoord;\n        if (delta > 50) {\n          this._moveToPrev();\n        } else if (delta < -50) {\n          this._moveToNext();\n        }\n      }.bind(this)\n    );\n  }\n\n  // on mousedown and mouseup\n  if (!this._isTouchDevice && this._config.swipe) {\n    $root.addEventListener(\n      'mousedown',\n      function (e) {\n        this._touchStartCoord = e.clientX;\n      }.bind(this)\n    );\n    $root.addEventListener(\n      'mouseup',\n      function (e) {\n        const touchEndCoord = e.clientX;\n        const delta = touchEndCoord - this._touchStartCoord;\n        if (delta > 50) {\n          this._moveToPrev();\n        } else if (delta < -50) {\n          this._moveToNext();\n        }\n      }.bind(this)\n    );\n  }\n};\n\n// update values of extreme properties\nChiefSlider.prototype._updateExtremeProperties = function () {\n  const $itemList = this._$itemList;\n  this._minOrder = +$itemList[0].dataset.order;\n  this._maxOrder = this._minOrder;\n  this._$itemByMinOrder = $itemList[0];\n  this._$itemByMaxOrder = $itemList[0];\n  this._minTranslate = +$itemList[0].dataset.translate;\n  this._maxTranslate = this._minTranslate;\n  for (let i = 0, length = $itemList.length; i < length; i++) {\n    const $item = $itemList[i];\n    const order = +$item.dataset.order;\n    if (order < this._minOrder) {\n      this._minOrder = order;\n      this._$itemByMinOrder = $item;\n      this._minTranslate = +$item.dataset.translate;\n    } else if (order > this._maxOrder) {\n      this._maxOrder = order;\n      this._$itemByMaxOrder = $item;\n      this._minTranslate = +$item.dataset.translate;\n    }\n  }\n};\n\n// update position of item\nChiefSlider.prototype._updateItemPosition = function () {\n  if (!this._updateItemPositionFlag) {\n    return;\n  }\n  const $wrapper = this._$wrapper;\n  const $wrapperClientRect = $wrapper.getBoundingClientRect();\n  const widthHalfItem = $wrapperClientRect.width / this._itemsInVisibleArea / 2;\n  const count = this._$itemList.length;\n  if (this._direction === 'next') {\n    const wrapperLeft = $wrapperClientRect.left;\n    const $min = this._$itemByMinOrder;\n    let translate = this._minTranslate;\n    const clientRect = $min.getBoundingClientRect();\n    if (clientRect.right < wrapperLeft - widthHalfItem) {\n      $min.dataset.order = this._minOrder + count;\n      translate += count * 100;\n      $min.dataset.translate = translate;\n      $min.style.transform = 'translateX('.concat(translate, '%)');\n      // update values of extreme properties\n      this._updateExtremeProperties();\n    }\n  } else {\n    const wrapperRight = $wrapperClientRect.right;\n    const $max = this._$itemByMaxOrder;\n    let translate = this._maxTranslate;\n    const clientRect = $max.getBoundingClientRect();\n    if (clientRect.left > wrapperRight + widthHalfItem) {\n      $max.dataset.order = this._maxOrder - count;\n      translate -= count * 100;\n      $max.dataset.translate = translate;\n      $max.style.transform = 'translateX('.concat(translate, '%)');\n      // update values of extreme properties\n      this._updateExtremeProperties();\n    }\n  }\n  // updating...\n  requestAnimationFrame(this._updateItemPosition.bind(this));\n};\n\n// _updateClassForActiveItems\nChiefSlider.prototype._updateClassForActiveItems = function () {\n  const activeItems = this._activeItems;\n  const $itemList = this._$itemList;\n  for (let i = 0, length = $itemList.length; i < length; i++) {\n    const $item = $itemList[i];\n    const index = +$item.dataset.index;\n    if (activeItems.indexOf(index) > -1) {\n      $item.classList.add(CLASS_ITEM_ACTIVE);\n    } else {\n      $item.classList.remove(CLASS_ITEM_ACTIVE);\n    }\n  }\n};\n\n// _updateIndicators\nChiefSlider.prototype._updateIndicators = function () {\n  const $indicatorList = this._$indicatorList;\n  const $itemList = this._$itemList;\n  if (!$indicatorList.length) {\n    return;\n  }\n  for (let index = 0, length = $itemList.length; index < length; index++) {\n    const $item = $itemList[index];\n    if ($item.classList.contains(CLASS_ITEM_ACTIVE)) {\n      $indicatorList[index].classList.add(CLASS_INDICATOR_ACTIVE);\n    } else {\n      $indicatorList[index].classList.remove(CLASS_INDICATOR_ACTIVE);\n    }\n  }\n};\n\n// move slides\nChiefSlider.prototype._move = function () {\n  if (!hasElementInVew(this._$root)) {\n    return;\n  }\n\n  const step = this._direction === 'next' ? -this._transformStep : this._transformStep;\n  const transform = this._transform + step;\n\n  if (!this._config.loop) {\n    const endTransformValue =\n      this._transformStep * (this._$itemList.length - this._itemsInVisibleArea);\n    if (transform < -endTransformValue || transform > 0) {\n      return;\n    }\n    this._$controlPrev.classList.remove(CLASS_CONTROL_HIDE);\n    this._$controlNext.classList.remove(CLASS_CONTROL_HIDE);\n    if (transform === -endTransformValue) {\n      this._$controlNext.classList.add(CLASS_CONTROL_HIDE);\n    } else if (transform === 0) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n  }\n\n  const activeIndex = [];\n  if (this._direction === 'next') {\n    for (let i = 0, length = this._activeItems.length; i < length; i++) {\n      let index = this._activeItems[i];\n      let newIndex = ++index;\n      if (newIndex > this._$itemList.length - 1) {\n        newIndex -= this._$itemList.length;\n      }\n      activeIndex.push(newIndex);\n    }\n  } else {\n    for (let i = 0, length = this._activeItems.length; i < length; i++) {\n      let index = this._activeItems[i];\n      let newIndex = --index;\n      if (newIndex < 0) {\n        newIndex += this._$itemList.length;\n      }\n      activeIndex.push(newIndex);\n    }\n  }\n  this._activeItems = activeIndex;\n  this._updateClassForActiveItems();\n  this._updateIndicators();\n\n  this._transform = transform;\n  this._$items.style.transform = 'translateX('.concat(transform, '%)');\n};\n\n// _moveToNext\nChiefSlider.prototype._moveToNext = function () {\n  this._direction = 'next';\n  this._move();\n};\n\n// _moveToPrev\nChiefSlider.prototype._moveToPrev = function () {\n  this._direction = 'prev';\n  this._move();\n};\n\n// _moveTo\nChiefSlider.prototype._moveTo = function (index) {\n  const $indicatorList = this._$indicatorList;\n  let nearestIndex = null;\n  let diff = null;\n  for (let i = 0, length = $indicatorList.length; i < length; i++) {\n    const $indicator = $indicatorList[i];\n    if ($indicator.classList.contains(CLASS_INDICATOR_ACTIVE)) {\n      const slideTo = +$indicator.dataset.slideTo;\n      if (diff === null) {\n        nearestIndex = slideTo;\n        diff = Math.abs(index - nearestIndex);\n      } else {\n        if (Math.abs(index - slideTo) < diff) {\n          nearestIndex = slideTo;\n          diff = Math.abs(index - nearestIndex);\n        }\n      }\n    }\n  }\n  diff = index - nearestIndex;\n  if (diff === 0) {\n    return;\n  }\n  this._direction = diff > 0 ? 'next' : 'prev';\n  for (let i = 1; i <= Math.abs(diff); i++) {\n    this._move();\n  }\n};\n\n// обработчик click для слайдера\nChiefSlider.prototype._eventHandler = function (e) {\n  const $target = e.target;\n  this._autoplay('stop');\n  if ($target.classList.contains(CLASS_CONTROL)) {\n    // при клике на кнопки влево и вправо\n    e.preventDefault();\n    this._direction = $target.dataset.slide;\n    this._move();\n  } else if ($target.dataset.slideTo) {\n    // при клике на индикаторы\n    const index = +$target.dataset.slideTo;\n    this._moveTo(index);\n  }\n  this._autoplay();\n};\n\n// _autoplay\nChiefSlider.prototype._autoplay = function (action) {\n  if (!this._config.autoplay) {\n    return;\n  }\n  if (action === 'stop') {\n    clearInterval(this._intervalId);\n    this._intervalId = null;\n    return;\n  }\n  if (this._intervalId === null) {\n    this._intervalId = setInterval(\n      function () {\n        this._direction = 'next';\n        this._move();\n      }.bind(this),\n      this._config.interval\n    );\n  }\n};\n\n// _refresh\nChiefSlider.prototype._refresh = function () {\n  // create some constants\n  const $itemList = this._$itemList;\n  const widthItem = $itemList[0].offsetWidth;\n  const widthWrapper = this._$wrapper.offsetWidth;\n  const itemsInVisibleArea = Math.round(widthWrapper / widthItem);\n\n  if (itemsInVisibleArea === this._itemsInVisibleArea) {\n    return;\n  }\n\n  this._autoplay('stop');\n\n  this._$items.classList.add(SLIDER_TRANSITION_OFF);\n  this._$items.style.transform = 'translateX(0)';\n\n  // setting properties after reset\n  this._widthItem = widthItem;\n  this._widthWrapper = widthWrapper;\n  this._itemsInVisibleArea = itemsInVisibleArea;\n  this._transform = 0;\n  this._transformStep = 100 / itemsInVisibleArea;\n  this._updateItemPositionFlag = false;\n  this._activeItems = [];\n\n  // setting order and translate items after reset\n  for (let i = 0, length = $itemList.length; i < length; i++) {\n    const $item = $itemList[i];\n    const position = i;\n    $item.dataset.index = position;\n    $item.dataset.order = position;\n    $item.dataset.translate = 0;\n    $item.style.transform = 'translateX(0)';\n    if (position < itemsInVisibleArea) {\n      this._activeItems.push(position);\n    }\n  }\n\n  this._updateClassForActiveItems();\n\n  window.requestAnimationFrame(\n    function () {\n      this._$items.classList.remove(SLIDER_TRANSITION_OFF);\n    }.bind(this)\n  );\n\n  // hide prev arrow for non-infinite slider\n  if (!this._config.loop) {\n    if (this._$controlPrev) {\n      this._$controlPrev.classList.add(CLASS_CONTROL_HIDE);\n    }\n    return;\n  }\n\n  // translate last item before first\n  const count = $itemList.length - 1;\n  const translate = -$itemList.length * 100;\n  $itemList[count].dataset.order = -1;\n  $itemList[count].dataset.translate = -$itemList.length * 100;\n  $itemList[count].style.transform = 'translateX('.concat(translate, '%)');\n  // update values of extreme properties\n  this._updateExtremeProperties();\n  this._updateIndicators();\n  // calling _autoplay\n  this._autoplay();\n};\n\n// public\nChiefSlider.prototype.next = function () {\n  this._moveToNext();\n};\nChiefSlider.prototype.prev = function () {\n  this._moveToPrev();\n};\nChiefSlider.prototype.moveTo = function (index) {\n  this._moveTo(index);\n};\nChiefSlider.prototype.refresh = function () {\n  this._refresh();\n};\n"]},"metadata":{},"sourceType":"module"}